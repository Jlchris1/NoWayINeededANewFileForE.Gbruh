-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportGUI"
screenGui.ResetOnSpawn = false -- Persist after respawn

-- Toggle positions for teleporting
local togglePositions = {
    Vector3.new(266.45123291015625, 2.9999990463256836, -719.4231567382812),
    Vector3.new(421.7074890136719, 2.999999523162842, -370.0318908691406),
    Vector3.new(-143.39913940429688, 2.9999990463256836, -152.67324829101562)
}

-- Variables
local activeToggle = nil
local toggles = {}
local teleportCount = 0
local maxTeleports = 3
local speedToggle = false
local customSpeed = 16 -- Default player speed
local jumpToggle = false
local customJumpPower = 50 -- Default jump power

-- Function to set player speed
local function setPlayerSpeed(speed)
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = speed
        end
    end
end

-- Function to set player jump power
local function setPlayerJumpPower(jumpPower)
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = jumpPower
        end
    end
end

-- Speed loop function
local function startSpeedLoop()
    task.spawn(function()
        while speedToggle do
            setPlayerSpeed(customSpeed)
            task.wait(0) -- Infinite loop with 0-second delay
        end
        setPlayerSpeed(16) -- Reset to default speed when loop ends
    end)
end

-- Jump power loop function
local function startJumpPowerLoop()
    task.spawn(function()
        while jumpToggle do
            setPlayerJumpPower(customJumpPower)
            task.wait(0) -- Infinite loop with 0-second delay
        end
        setPlayerJumpPower(50) -- Reset to default jump power when loop ends
    end)
end

-- Create toggle buttons (1, 2, 3)
for i = 1, 3 do
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 30, 0, 30)
    button.Position = UDim2.new(0, 10 + (i - 1) * 40, 0, 10)
    button.Text = tostring(i)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    button.Parent = screenGui

    toggles[i] = false

    button.MouseButton1Click:Connect(function()
        if toggles[i] then
            toggles[i] = false
            button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            activeToggle = nil
        else
            for j, otherButton in ipairs(screenGui:GetChildren()) do
                if otherButton:IsA("TextButton") then
                    otherButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                    toggles[j] = false
                end
            end
            toggles[i] = true
            button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            activeToggle = i
        end
    end)
end

-- Create a Speed toggle button
local speedButton = Instance.new("TextButton")
speedButton.Size = UDim2.new(0, 60, 0, 30)
speedButton.Position = UDim2.new(0, 10, 0, 50)
speedButton.Text = "Speed"
speedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
speedButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
speedButton.Parent = screenGui

speedButton.MouseButton1Click:Connect(function()
    speedToggle = not speedToggle
    speedButton.BackgroundColor3 = speedToggle and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    if speedToggle then
        startSpeedLoop() -- Start the speed loop
    end
end)

-- Create a TextBox for custom speed
local speedInput = Instance.new("TextBox")
speedInput.Size = UDim2.new(0, 60, 0, 30)
speedInput.Position = UDim2.new(0, 80, 0, 50) -- Next to the speed toggle button
speedInput.Text = tostring(customSpeed)
speedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
speedInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
speedInput.PlaceholderText = "Speed"
speedInput.TextScaled = true
speedInput.Parent = screenGui

-- Update custom speed when the TextBox value changes
speedInput.FocusLost:Connect(function(enterPressed)
    local input = tonumber(speedInput.Text)
    if input and input > 0 then
        customSpeed = input
    else
        speedInput.Text = tostring(customSpeed) -- Reset to the last valid value
    end
end)

-- Create Jump toggle button
local jumpButton = Instance.new("TextButton")
jumpButton.Size = UDim2.new(0, 60, 0, 30)
jumpButton.Position = UDim2.new(0, 10, 0, 90)
jumpButton.Text = "Jump"
jumpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
jumpButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
jumpButton.Parent = screenGui

jumpButton.MouseButton1Click:Connect(function()
    jumpToggle = not jumpToggle
    jumpButton.BackgroundColor3 = jumpToggle and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    if jumpToggle then
        startJumpPowerLoop() -- Start the jump power loop
    end
end)

-- Create a TextBox for custom jump power
local jumpInput = Instance.new("TextBox")
jumpInput.Size = UDim2.new(0, 60, 0, 30)
jumpInput.Position = UDim2.new(0, 80, 0, 90) -- Next to the jump toggle button
jumpInput.Text = tostring(customJumpPower)
jumpInput.TextColor3 = Color3.fromRGB(255, 255, 255)
jumpInput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
jumpInput.PlaceholderText = "Jump"
jumpInput.TextScaled = true
jumpInput.Parent = screenGui

-- Update custom jump power when the TextBox value changes
jumpInput.FocusLost:Connect(function(enterPressed)
    local input = tonumber(jumpInput.Text)
    if input and input > 0 then
        customJumpPower = input
    else
        jumpInput.Text = tostring(customJumpPower) -- Reset to the last valid value
    end
end)

-- Function to initialize speed and jump on respawn
local function initializeAttributes(character)
    if speedToggle then
        startSpeedLoop()
    else
        setPlayerSpeed(16) -- Default speed
    end

    if jumpToggle then
        startJumpPowerLoop()
    else
        setPlayerJumpPower(50) -- Default jump power
    end
end

-- Create teleportation buttons (S1, S2, S3)
local function createTeleportButton(name, position, offsetX)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 30, 0, 30)
    button.Position = UDim2.new(0, 10 + offsetX, 0, 130)
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    button.Parent = screenGui

    button.MouseButton1Click:Connect(function()
        local character = game.Players.LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = CFrame.new(position)
        end
    end)
end

createTeleportButton("S1", togglePositions[1], 140)
createTeleportButton("S2", togglePositions[2], 180)
createTeleportButton("S3", togglePositions[3], 220)

-- Monitor transparency and teleportation
local function monitorTransparency(character)
    teleportCount = 0
    local function teleportIfVisible()
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency < 1 and activeToggle then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.CFrame = CFrame.new(togglePositions[activeToggle])
                    teleportCount = teleportCount + 1
                    if teleportCount >= maxTeleports then return end
                end
            end
        end
    end

    while teleportCount < maxTeleports do
        task.wait(0.5)
        teleportIfVisible()
    end
end

-- Connect CharacterAdded event
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart")
    monitorTransparency(character)
    initializeAttributes(character)
end)

-- Create Hide/Show button (grey, top-right)
local hideButton = Instance.new("TextButton")
hideButton.Size = UDim2.new(0, 60, 0, 30)
hideButton.Position = UDim2.new(1, -70, 0, 10)
hideButton.Text = "Hide"
hideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hideButton.BackgroundColor3 = Color3.fromRGB(169, 169, 169) -- Grey color
hideButton.Parent = screenGui

local guiVisible = true
hideButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    for _, button in pairs(screenGui:GetChildren()) do
        if button:IsA("TextButton") and button ~= hideButton then
            button.Visible = guiVisible
        end
        if button:IsA("TextBox") then
            button.Visible = guiVisible
        end
    end
    hideButton.Text = guiVisible and "Hide" or "Show"
end)

-- Parent the ScreenGui to PlayerGui
screenGui.Parent = game.Players.LocalPlayer.PlayerGui
